stages:
  - buildAutoWeb-job
  - testPW-job
  - testWD-job
  - allure-job

buildAutoWeb-job:
  stage: buildAutoWeb-job
  services:
    ui:
      image: visualregressiontracker/ui:4.18.0
      ports:
        - "${PORT}:8080"
      environment:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
      restart: always
    api:
      image: visualregressiontracker/api:4.18.0
      environment:
        DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
        JWT_SECRET: ${JWT_SECRET}
        JWT_LIFE_TIME: ${JWT_LIFE_TIME}
        APP_FRONTEND_URL: ${APP_FRONTEND_URL}
        BODY_PARSER_JSON_LIMIT: ${BODY_PARSER_JSON_LIMIT}
      ports:
        - "${APP_PORT}:3000"
      volumes:
        - ./imageUploads:/imageUploads
      depends_on:
        - postgres
      restart: always
    migration:
      image: visualregressiontracker/migration:4.18.0
      environment:
        DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      depends_on:
      postgres:
      condition: service_healthy
      restart: on-failure
    postgres:
      image: postgres:9.6.23-bullseye
      restart: always
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
      ports:
        - "${POSTGRES_PORT}:5432"
      expose:
        - "${POSTGRES_PORT}"
      volumes:
        - ./db:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
        interval: 10s
        timeout: 120s
        retries: 10
    selenoid:
      image: aerokube/selenoid:latest-release
      volumes:
        - "${PWD}/MFTV_Web_Desktop_Smoke_JUnit5_only/WebDriver/init/selenoid:/etc/selenoid"
        - "${PWD}/MFTV_Web_Desktop_Smoke_JUnit5_only/WebDriver/working/selenoid/video:/opt/selenoid/video"
        - "${PWD}/MFTV_Web_Desktop_Smoke_JUnit5_only/WebDriver/working/selenoid/logs:/opt/selenoid/logs"
        - "/var/run/docker.sock:/var/run/docker.sock"
      environment:
        - OVERRIDE_VIDEO_OUTPUT_DIR=work/selenoid/video
      command: [ "-conf", "/etc/selenoid/browsers.json", "-video-output-dir", "/opt/selenoid/video","-log-output-dir", "/opt/selenoid/logs" ]
      ports:
        - 4444:4444
      network_mode: bridge
    selenoid-ui:
      image: aerokube/selenoid-ui:latest-release
      network_mode: bridge
      links:
        - selenoid
      ports:
        - 8082:8080
      command: ["--selenoid-uri", "http://selenoid:4444"]
    vnc:
      image: selenoid/vnc:chrome_93.0
      network_mode: bridge

testPW-job:
  stage: testPW-job
  build_image:
  script:
    - docker build -t tests_playwright .
    - docker run tests_run_playwright ${PWD}/MFTV_Web_Desktop_Smoke_JUnit5_only/WebPlaywright/Dockerfile
    network_mode: "host"
  tags:
    - qa
  allow_failure: true

testWD-job:
  stage: testWD-job
  build_image:
  script:
    - docker build -t tests_webdriver .
    - docker run tests_run_webdriver ${PWD}/MFTV_Web_Desktop_Smoke_JUnit5_only/WebDriver/Dockerfile
    network_mode: host
  tags:
    - qa
  allow_failure: true

allure-job:
  stage: allure-job
  script:
    - mvn io.qameta.allure:allure-maven:report






